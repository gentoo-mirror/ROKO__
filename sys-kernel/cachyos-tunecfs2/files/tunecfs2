#!/usr/bin/env ruby

METHOD_NAME_REGEXP = /(?!\d)(?:\w|[^[:ascii:]])+[!?=]?|<main>|\-@?|![=~]?|\[\]=?|\*\*?|\+@?|<<?|<=>?|===?|=~|>[=>]?|[%&\/\^`\|~]/

def __DATA__
	File.read(caller.first.match(/\A.*(?=:\d+(?::in `#{METHOD_NAME_REGEXP}')?\z)/)[0], :encoding => __ENCODING__.to_s).match(/^__END__$/m).post_match.strip rescue nil
end

def Process.root?
	self.euid.zero? and self.uid.zero?
end

class InvalidCommandlineError < StandardError; end

def nproc
	`nproc --all`.to_i
end

def human_friendly_ns(ns)
	units = "num "
	nx = 0
	scale = 0
	(units.length - 1).times{
		break if (nx = ns / 1000) * 1000 != ns
		ns = nx
		scale += 1
	}
	return "#{ns}#{units[scale].strip}s"
end

def set_sched(name, val, dispn: nil, dispv: nil)
	puts "#{dispn ? dispn : name} = #{dispv ? dispv : val}"
	system("echo #{val} | tee /sys/kernel/debug/sched/#{name} >/dev/null")
end

#def set_sysctl(name, val, dispn: nil, dispv: nil)
#	puts "#{dispn ? dispn : name} = #{dispv ? dispv : val}"
#	system("echo #{val} | tee /proc/sys/kernel/sched_#{name} >/dev/null")
#end

def main(args)
	if !Process.root?
		puts "This program requires root privilege"
		exit -1
	end
	
	presets = __DATA__.lines(chomp: true).keep_if{|line| !line.empty?}.map{ |line|
		values = line.split(':').map{|v| v.strip}
		[values[0], [values[1]] + values[2..5].map{|val| val.to_i}]
	}.to_h

	begin
		raise(InvalidCommandlineError) if args.length != 1 or !presets.has_key?(preset_name = args.shift)
		preset = presets[preset_name]
		
		nproc_capped = [8, nproc].min
		multiplier = case preset[1]
			when 0; 1
			when 1; 1 + Math.log2(nproc_capped).to_i
			when 2; nproc_capped
			else; raise(StandardError, "BUG: invalid tunable_scaling value specified")
			end
		
		puts "Applying: #{preset[0]}"
		keys = ["tunable_scaling", "latency", "min_granularity", "wakeup_granularity"]
		(1..3).each{ |idx|
			dispn = keys[idx]
			name = "#{dispn}_ns"
			val = preset[idx + 1] * multiplier
			dispv = human_friendly_ns(val)
			set_sched(name, val, dispn: dispn, dispv: dispv)
		}
		set_sched(keys[0], preset[1])
	rescue InvalidCommandlineError
		puts "Usage: #{$0} #{presets.keys.join('|')}"
		exit -2
	end
end
main(ARGV)
exit 0

__END__

vanilla     :Vanilla default values             :1: 6000000: 750000:1000000
vanilla-min :Vanilla minimal constant values    :0: 6000000: 750000:1000000
vanilla-max :Vanilla maximal constant values    :0:24000000:3000000:4000000

cachy       :Cachy/BORE traditional values      :1: 4000000: 500000: 800000
cachy-min   :Cachy/BORE minimal constant values :0: 4000000: 500000: 800000
cachy-max   :Cachy/BORE maximal constant values :0:16000000:2000000:3200000

zenify      :Zenify values                      :1: 3000000: 300000: 500000
zenify-min  :Zenify minimal constant values     :0: 3000000: 300000: 500000
zenify-max  :Zenify maximal constant values     :0:12000000:1200000:2000000

bore        :BORE 1.6.34.3 constant values      :0:12800000:1600000:4800000
bore1.6.34.1:BORE 1.6.34.1 constant values      :0:16000000:2000000:4000000

