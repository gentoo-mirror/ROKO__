--- a/Makefile	2021-08-23 09:31:46.000000000 +0200
+++ b/Makefile	2021-10-16 23:40:53.698941777 +0200
@@ -1,4 +1,3 @@
-CC ?= gcc
 
 CFLAGS+=-Wall -Wextra -pedantic
 SANITY_FLAGS=-Wfloat-equal -Wshadow -Wpointer-arith
@@ -16,17 +15,17 @@
 		SRC_DIR=src/x86/
 		SOURCE += $(COMMON_SRC) $(SRC_DIR)cpuid.c $(SRC_DIR)apic.c $(SRC_DIR)cpuid_asm.c $(SRC_DIR)uarch.c
 		HEADERS += $(COMMON_HDR) $(SRC_DIR)cpuid.h $(SRC_DIR)apic.h $(SRC_DIR)cpuid_asm.h $(SRC_DIR)uarch.h
-		CFLAGS += -DARCH_X86 -std=c99 -fstack-protector-all
+		CFLAGS += -DARCH_X86 -std=c99
 	else ifeq ($(arch), $(filter $(arch), ppc64le ppc64 ppcle ppc))
 		SRC_DIR=src/ppc/
 		SOURCE += $(COMMON_SRC) $(SRC_DIR)ppc.c $(SRC_DIR)uarch.c $(SRC_DIR)udev.c
 		HEADERS += $(COMMON_HDR) $(SRC_DIR)ppc.h $(SRC_DIR)uarch.h  $(SRC_DIR)udev.c
-		CFLAGS += -DARCH_PPC -std=gnu99 -fstack-protector-all
+		CFLAGS += -DARCH_PPC -std=gnu99
 	else ifeq ($(arch), $(filter $(arch), arm aarch64_be aarch64 arm64 armv8b armv8l armv7l armv6l))
 		SRC_DIR=src/arm/
 		SOURCE += $(COMMON_SRC) $(SRC_DIR)midr.c $(SRC_DIR)uarch.c $(SRC_DIR)soc.c $(SRC_DIR)udev.c
 		HEADERS += $(COMMON_HDR) $(SRC_DIR)midr.h $(SRC_DIR)uarch.h  $(SRC_DIR)soc.h $(SRC_DIR)udev.c $(SRC_DIR)socs.h
-		CFLAGS += -DARCH_ARM -Wno-unused-parameter -std=c99 -fstack-protector-all
+		CFLAGS += -DARCH_ARM -Wno-unused-parameter -std=c99
 
 		os := $(shell uname -s)
 		ifeq ($(os), Darwin)
@@ -51,20 +50,17 @@
 	OUTPUT=cpufetch.exe
 endif
 
-all: CFLAGS += -O3
 all: $(OUTPUT)
 
-debug: CFLAGS += -g -O0
 debug: $(OUTPUT)
 
-static: CFLAGS += -static -O3
+static: CFLAGS += -static
 static: $(OUTPUT)
 
-strict: CFLAGS += -O3 -Werror -fsanitize=undefined -D_FORTIFY_SOURCE=2
 strict: $(OUTPUT)
 
 $(OUTPUT): Makefile $(SOURCE) $(HEADERS)
-	$(CC) $(CFLAGS) $(SANITY_FLAGS) $(SOURCE) -o $(OUTPUT)
+	$(CC) $(CFLAGS) $(LDFLAGS) $(SANITY_FLAGS) $(SOURCE) -o $(OUTPUT)
 
 run: $(OUTPUT)
 	./$(OUTPUT)
